final
-> 변수를 더이상 못 고치게 만드는 것
late
-> 변수를 나중에 설정할 수 있게함(파이썬에서 input 정도로 생각하면 될듯)
const
-> 수정을 못하는 건 비슷하지만 컴파일하기 전에 알아야 하는 값. 사용자가 입력하거나 api에서 가져와야하는 값이면 안됨(=이미 알고 있는 값이어야함)
dynamic
-> 어떤 타입이 들어올지 모른다는 뜻
nullable
-> null이 될 수 있는 값을 선언할 때 사용
ex) String? name = 'nico'; //여기서 name은 null이 될 수 있음
num
-> int가 될 수도 있고 double이 될 수도 있음
collection if
-> 리스트 내에서 존재할 수도, 안 할 수도 있는 변수를 다룰 수 있음 //리스트 내부에 쓰는 함수
Map<String, int> (변수이름)
-> dictionary랑 비슷하다 생각하면 될듯, 예시로 String과 int를 들었는데 <>안에 저렇게 타입을 지정해주면 타입대로만 선언해줘야함
object
-> any랑 같은 말, map에서 key와 object를 정할 때 사용함
Set
-> Set에 속한 것들은 유니크함(=중복이 있어도 출력하면 걍 안 나옴)
List
-> 파이썬의 list와 동일함 //Set은 파이썬으로 치면 tuple
=>
-> return과 똑같은 기능
ex)
String sayHello(String potato) {
  return "Hello $potato nice to meet you";
}
String sayHello(String potato) => "Hello $potato nice to meet you";
//이 둘이 같은거
named arguments
-> 사용법은 중괄호 안에 쓰기
